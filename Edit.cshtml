@model GateBoys.Models.addInfo

@{
    ViewBag.Title = "Modify";
}

<div class="row">
    <div class="col-md-7 col-md-offset-2 col-sm-6 col-xs-12">
        <div class="panel panel-default formPart">
            <div class="panel-heading patternbg">
                Modify  <span>details </span><span class="glyphicon glyphicon-edit"></span>
            </div>
            <div class="panel panel-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.MoreInfoId)

                        @*<div class="form-group">
                        @Html.LabelFor(model => model.addInfoOf, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addInfoOf, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addInfoOf, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                        <div class="form-group">
                            <h5>
                                Name @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </h5>
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.name) } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <h5>Middle name</h5>
                            @Html.EditorFor(model => model.midName, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.midName) } })
                          
                        </div>

                        <div class="form-group">
                            <h5>
                                Surname
                            </h5>
                            @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.surname) } })
                            @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <h5>
                                ID Number
                            </h5>
                            @Html.EditorFor(model => model.idNum, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.idNum) } })
                            @Html.ValidationMessageFor(model => model.idNum, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <h5>
                                Address
                            </h5>
                            @Html.EditorFor(model => model.streetname, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.streetname) } })
                            @Html.ValidationMessageFor(model => model.streetname, "", new { @class = "text-danger" })
                            <br />
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.city) } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                            <br />
                            @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.code) } })
                            @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <h5>
                                Phone Number
                            </h5>
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.phone) } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Update" class="btn btn-common btn-theme" />

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
